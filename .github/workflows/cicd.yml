name: deploying myapp flask app to a KinD cluster

on:
  pull_request: { branches: ["*"] }
  push:
    branches:
      - main

permissions:          # github actions permissions to access the repository and the registry 
  contents: read      # ${{ secrets.KUBECONFIG }} # and the k8s cluster if needed
  packages: write

env:
  Registry: ghcr.io
  ImageRepo: memor24/khc-images

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        
    # - name: set up Docker Buildx # optimizes the build process by caching and parallelizing builds
    #  uses: docker/setup-buildx-action@v1

      - name: login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.Registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  # OR  run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u <dockerhub-user> --password-stdin

      - name: build and push Docker image
        run: |
          cd app
          docker build -t my-app:latest . 
          docker tag my-app:latest ${{ env.Registry }}/${{ env.ImageRepo }}/my-app:${{ github.sha }} 
          docker push ${{ env.Registry }}/${{ env.ImageRepo }}/my-app:${{ github.sha }}

      - name: install KinD
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: create KinD cluster
        run: |
          kind create cluster --name my-cluster --config ./kind-config.yaml
          kubectl wait --for=condition=Ready nodes --all --timeout=180s

      - name: config kubectl to use the KinD cluster
        run: |
          kubectl cluster-info --context kind-my-cluster
          kubectl config use-context kind-my-cluster
          kubectl create namespace app-ns 
          kubectl create rolebinding default-admin \
          --clusterrole=admin \
          --serviceaccount=app-ns:default \
          --namespace=app-ns


      - name : create regcred kubernetes secret for kubectl acccess to ghcr
        run: |
          kubectl create secret docker-registry regcred \
          --docker-server=ghcr.io \
          --docker-username=${{ github.actor }} \
          --docker-password=${{ secrets.GITHUB_TOKEN }} \
          --docker-email=${{ github.actor }}@sth.co \
          --dry-run=client -o yaml | kubectl apply -f -

      - name: install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: update the Helm chart and deploy the app to the KinD cluster
        run: |
          helm upgrade --install my-app ./helm-chart --namespace app-ns  \
          --set image.repository=${{ env.Registry }}/${{ env.ImageRepo }}/my-app \
          --set image.tag=${{ github.sha }} \
          --set image.pullSecrets[0].name=regcred
          